"""Changes to users and roles to allow integration with organisation

Revision ID: 7545bb352d84
Revises: 8c4eddde7535
Create Date: 2020-10-15 10:36:16.969317

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7545bb352d84'
down_revision = '8c4eddde7535'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'campaign', ['id'])
    op.create_unique_constraint(None, 'campaign_image', ['id'])
    op.create_unique_constraint(None, 'image', ['id'])
    op.create_unique_constraint(None, 'imageset', ['id'])
    op.create_unique_constraint(None, 'object', ['id'])
    op.add_column('roles', sa.Column('subject_id', sa.Integer(), nullable=True))
    op.add_column('roles', sa.Column('subject_type', sa.String(length=128), nullable=True))
    op.create_unique_constraint(None, 'roles', ['id'])
    op.drop_constraint('roles_subject_fkey', 'roles', type_='foreignkey')
    op.drop_column('roles', 'subject')
    op.add_column('user', sa.Column('public_key', sa.Text(), nullable=True))
    op.alter_column('user', 'API_KEY',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('user', 'API_SECRET',
               existing_type=postgresql.BYTEA(),
               nullable=True)
    op.create_unique_constraint(None, 'user', ['public_key'])
    op.create_unique_constraint(None, 'user', ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'user', type_='unique')
    op.alter_column('user', 'API_SECRET',
               existing_type=postgresql.BYTEA(),
               nullable=False)
    op.alter_column('user', 'API_KEY',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_column('user', 'public_key')
    op.add_column('roles', sa.Column('subject', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('roles_subject_fkey', 'roles', 'campaign', ['subject'], ['id'])
    op.drop_constraint(None, 'roles', type_='unique')
    op.drop_column('roles', 'subject_type')
    op.drop_column('roles', 'subject_id')
    op.drop_constraint(None, 'object', type_='unique')
    op.drop_constraint(None, 'imageset', type_='unique')
    op.drop_constraint(None, 'image', type_='unique')
    op.drop_constraint(None, 'campaign_image', type_='unique')
    op.drop_constraint(None, 'campaign', type_='unique')
    # ### end Alembic commands ###
